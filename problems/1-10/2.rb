#!/usr/bin/env ruby

# This algorithm uses a memory list to hold previous values
def euler_2(max = 4000000)
  fib = [0, 1, 2]
  sum = 2
	while fib.last < max do
		fib << fib.last + fib[fib.length-2]
		sum += fib.last if fib.last%2 == 0
	end
	sum
end

#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#Find the sum of all the even-valued terms in the sequence which do not exceed four million.
